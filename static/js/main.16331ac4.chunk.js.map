{"version":3,"sources":["Context/AppContext.tsx","components/Header.tsx","Context/TeamContext/teamReducer.ts","Context/TeamContext/TeamContext.tsx","components/HeroTeam/EmptyHeroBanner.tsx","components/HeroTeam/HeroBanner/HeroName.tsx","components/HeroTeam/HeroBanner/CloseIcn.tsx","components/HeroTeam/HeroBanner/Stats/Stat.tsx","components/HeroTeam/HeroBanner/Stats/StatList.tsx","components/HeroTeam/HeroBanner/HeroBanner.tsx","components/HeroTeam/SideButtons.tsx","components/HeroTeam/TeamDescription.tsx","components/HeroTeam/StatGrid.tsx","components/HeroTeam/TeamContainer.tsx","components/HeroTeam/HeroTeam.tsx","api.ts","components/spinner/Spinner.js","components/Backdrop/Backdrop.tsx","components/Backdrop/ImageOverlay.tsx","components/StatPanel/StatTag.tsx","components/StatPanel/StatPanel.tsx","components/HeroSearch/HeroCard/CardButton.tsx","components/HeroSearch/HeroCard/CardBadge.tsx","components/HeroSearch/HeroCard/HeroCard.tsx","components/HeroSearch/HeroList.tsx","components/HeroSearch/SearchArea.tsx","components/HeroSearch/Drawer.tsx","App.tsx","index.tsx","components/spinner/spinner.module.css"],"names":["AppContext","React","createContext","AppContextProvider","props","useState","isDrawerOpen","setIsDrawerOpen","Provider","value","toggleDrawer","Header","appCtx","useContext","backgroundColor","p","minW","w","m","justifyContent","alignItems","color","size","onClick","toast","createStandaloneToast","teamReducer","state","action","produce","draftState","type","team","heroAlignment","hero","biography","alignment","alignmentIdx","isOnTeamAlready","find","h","id","emptySpace","findIndex","status","title","name","isClosable","heroIdx","TeamContext","TeamContextProvider","useReducer","heroTeam","dispatch","useEffect","items","localStorage","getItem","JSON","parse","console","log","setItem","stringify","ctx","heroes","EmptyHeroBanner","height","maxW","border","borderColor","borderRadius","cursor","HeroName","position","left","transform","textAlign","top","pt","fontWeight","fontSize","style","WebkitTextStroke","children","CloseIcn","Close","right","boxSize","padding","Stat","icon","amount","statName","hasArrow","label","width","pl","StatList","stats","bottom","combat","durability","intelligence","power","speed","strength","HeroBanner","onClose","showCloseBtn","setShowCloseBtn","overflow","onMouseEnter","onMouseLeave","src","image","url","objectFit","objectPosition","powerstats","in","SideButtons","onDelete","onPrint","direction","zIndex","placement","aria-label","borderTopEndRadius","colorScheme","borderBottomEndRadius","TeamDescription","text","highestStat","borderWidth","ml","StatGrid","bestStat","reduce","weight","parseInt","appearance","split","length","unit","parseFloat","weightedHeroAmount","maxStat","Math","max","Object","values","key","mt","gridTemplateColumns","gap","gridRow","gridColumn","keys","map","str","charAt","toLocaleUpperCase","slice","round","TeamContainer","templateColumns","margin","justifyItems","HeroTeam","teamCtx","componentRef","useRef","handlePrint","useReactToPrint","content","current","flat","random","ref","variant","display","fetchHero","a","response","axios","get","process","Spinner","className","styles","spinner","bounce1","bounce2","bounce3","Backdrop","pos","ImageOverlay","alt","maxH","StatTag","px","as","StatPanel","spacing","wrap","RiSwordFill","BsFillShieldFill","GiBrain","AiFillThunderbolt","GiRunningShoe","CgGym","CardButton","Add","_hover","CardBadge","bad","HeroCard","isPictureOpen","setIsPictureOpen","HeroList","page","setPage","heroesPage","hasNextPage","hasPrevPage","disabled","ChevronLeft","mr","ChevronRight","SearchArea","forwardRef","body","searchResults","setSearchResults","input","setInput","useQuery","enabled","data","refetch","firstRender","timer","setTimeout","clearTimeout","results","filter","every","stat","mb","Search","alignSelf","placeholder","onChange","e","target","SearchDrawer","isOpen","App","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","cacheTime","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.16331ac4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const AppContext =\n  React.createContext<{\n    isDrawerOpen: boolean;\n    toggleDrawer: () => void;\n  } | null>(null);\n\ninterface Props {}\n\nexport const AppContextProvider: React.FC<Props> = (props) => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  const toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  return (\n    <AppContext.Provider {...props} value={{ isDrawerOpen, toggleDrawer }} />\n  );\n};\n\n","import { Box, Button, Flex, Heading } from '@chakra-ui/react';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../Context/AppContext';\n\ninterface Props {}\n\nconst Header: React.FC<Props> = (props) => {\n    const appCtx = useContext(AppContext);\n\n    return (\n        <Box backgroundColor='#A6D6D6' p={2}>\n            <Flex minW='300px' w='80%' m='auto' justifyContent='space-between' alignItems='center'>\n                <Heading color='white' size='lg'>HERO APP</Heading>\n                <Button onClick={appCtx?.toggleDrawer}>Add heroes</Button>\n            </Flex>\n        </Box>\n    );\n}\n\nexport default Header;","import { createStandaloneToast } from \"@chakra-ui/react\";\nimport produce from \"immer\";\nimport { Hero } from \"../../models\";\nimport { HeroTeamArray } from \"./TeamContext\";\n\n//prettier-ignore\nexport type HeroTeamAction =\n{ type: \"ADD\" | \"REMOVE\"; hero: Hero; } \n| { type: \"CLEAR\" } \n| { type: 'SET', team: HeroTeamArray};\n\n//allows me to display global toasts outside react components\nconst toast = createStandaloneToast();\n//prettier-ignore\nexport const teamReducer = (state: HeroTeamArray, action: HeroTeamAction) => {\n    const updatedState = produce(state, (draftState) => {\n      if(action.type === 'SET'){\n        return action.team;\n      }\n      if (action.type === \"CLEAR\") {\n        return [[null, null, null], [null, null, null]] as HeroTeamArray;\n      }\n      let heroAlignment = action.hero.biography.alignment;\n      let alignmentIdx = heroAlignment === \"good\" ? 0 : 1;\n\n      if (action.type === \"ADD\") {\n        let isOnTeamAlready = draftState[alignmentIdx].find(h => h?.id === action.hero.id);\n        let emptySpace = draftState[alignmentIdx].findIndex(h => h === null);\n        \n        if (emptySpace !== -1  && !isOnTeamAlready) {\n          draftState[alignmentIdx][emptySpace]= action.hero;\n          toast({status: 'success', title: `${action.hero.name} was added to your team`, isClosable: true});\n        } else{\n            if(isOnTeamAlready){\n                toast({status: 'warning', title: `${action.hero.name} is already on your team`, isClosable: true});\n            }\n            else {\n                toast({status: 'warning', title: `You can't have more than 3 ${heroAlignment} heroes`, isClosable: true});\n            }\n        }\n      }\n\n      if (action.type === \"REMOVE\") {\n        let heroIdx = draftState[alignmentIdx].findIndex(h => h?.id === action.hero.id);\n        if(heroIdx !== -1){\n          draftState[alignmentIdx][heroIdx] = null;\n          toast({status: 'success', title: `${action.hero.name} was removed from your team`, isClosable: true});\n        }\n      }\n    });\n  \n    return updatedState;\n  };\n","import React, { Dispatch, useEffect, useReducer } from \"react\";\nimport { Hero } from \"../../models\";\nimport { HeroTeamAction, teamReducer } from \"./teamReducer\";\n\nexport type HeroTeamArray = [\n  [Hero | null, Hero | null, Hero | null],\n  [Hero | null, Hero | null, Hero | null]\n];\n\nexport const TeamContext =\n  React.createContext<{\n    dispatch: Dispatch<HeroTeamAction>;\n    heroes: HeroTeamArray;\n  } | null>(null);\n\nexport const TeamContextProvider: React.FC<{}> = (props) => {\n  const [heroTeam, dispatch] = useReducer(teamReducer, [\n    [null, null, null],\n    [null, null, null],\n  ]);\n\n  //read from localstorage on mount\n  useEffect(() => {\n    let items: any = localStorage.getItem(\"REACT_HERO_APP-TEAM\");\n    if (items) {\n      items = JSON.parse(items);\n      console.log(\"items\", items);\n      dispatch({ type: \"SET\", team: items });\n    }\n  }, []);\n\n  //save to localstorage on update\n  useEffect(() => {\n    localStorage.setItem(\"REACT_HERO_APP-TEAM\", JSON.stringify(heroTeam));\n  }, [heroTeam]);\n\n  const ctx = {\n    heroes: heroTeam as HeroTeamArray,\n    dispatch,\n  };\n  return <TeamContext.Provider {...props} value={ctx} />;\n};\n","import { Flex } from \"@chakra-ui/layout\";\nimport React, { MouseEventHandler } from \"react\";\nimport { BsFillPersonFill } from \"react-icons/bs\";\ninterface Props {\n  onClick?: MouseEventHandler;\n}\n\nconst EmptyHeroBanner: React.FC<Props> = ({ onClick }) => {\n  return (\n    <Flex\n      height=\"55vh\"\n      maxW=\"80%\"\n      minW=\"10rem\"\n      backgroundColor=\"gray.200\"\n      border=\"2px dashed\"\n      borderColor=\"gray.300\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      borderRadius=\"8px\"\n      onClick={onClick}\n      cursor={onClick ? \"pointer\" : \"auto\"}\n    >\n      <BsFillPersonFill size=\"4rem\" color=\"#6b6969\" />\n    </Flex>\n  );\n};\n\nexport default EmptyHeroBanner;\n","import React from 'react';\nimport {Text} from '@chakra-ui/layout'\n\ninterface Props {}\n\nconst HeroName: React.FC<Props> = (props) => {\n\n    return (\n        <Text\n        position=\"absolute\"\n        left=\"50%\"\n        transform='translateX(-50%)'\n        textAlign='center'\n        top=\"0\"\n        pt={2}\n        fontWeight=\"bold\"\n        color=\"white\"\n        fontSize=\"2xl\"\n        style={{ WebkitTextStroke: \"1px black\" }}\n      >\n        {props.children}\n      </Text>\n    );\n}\n\nexport default HeroName;","import { CloseIcon } from '@chakra-ui/icons';\nimport React from 'react';\n\ninterface Props {onClick: any}\n\nconst CloseIcn: React.FC<Props> = ({onClick}) => {\n\n    return (\n        <CloseIcon\n          position=\"absolute\"\n          top=\".5rem\"\n          right=\".5rem\"\n          boxSize=\"1.5rem\"\n          padding={1}\n          onClick={onClick}\n          borderRadius=\"50%\"\n          backgroundColor=\"red.500\"\n          color=\"white\"\n        />\n    );\n}\n\nexport default CloseIcn;","import { Box, Flex } from '@chakra-ui/layout';\nimport { Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n    icon: JSX.Element;\n    amount: number | string;\n    color: any;\n    statName: string;\n}\n\nconst Stat: React.FC<Props> = ({icon, amount, color, statName}) => {\n\n    return (\n        <Tooltip hasArrow label={`${statName}: ${amount}`}>\n        <Flex width={`${amount}%`} height='20px'  backgroundColor={color} alignItems='center' pl={2}>\n            {icon}\n        </Flex>\n        </Tooltip>\n    );\n}\n\nexport default Stat;","import { Box } from '@chakra-ui/layout';\nimport { Stats } from 'node:fs';\nimport React from 'react';\nimport { AiFillThunderbolt } from 'react-icons/ai';\nimport { BsFillShieldFill } from 'react-icons/bs';\nimport { CgGym } from 'react-icons/cg';\nimport { GiBrain, GiRunningShoe } from 'react-icons/gi';\nimport { RiSwordFill } from 'react-icons/ri';\nimport { Powerstats } from '../../../../models';\nimport Stat from './Stat';\n\ninterface Props { stats: Powerstats}\n//prettier-ignore\nconst StatList: React.FC<Props> = ({stats}) => {\n\n    return (\n        <Box position='absolute' left='0' bottom='0' width='100%'>\n            <Stat icon={<RiSwordFill color='white' />} color='red.500' amount={stats.combat} statName='Combat'/>\n            <Stat icon={<BsFillShieldFill color='white'/>} color='gray.500' amount={stats.durability} statName='Durability' />\n            <Stat icon={<GiBrain color='white'/>} color='blue.500' amount={stats.intelligence} statName='Intelligence' />\n            <Stat icon={<AiFillThunderbolt color='white'/>} color='yellow.500' amount={stats.power} statName='Power' />\n            <Stat icon={<GiRunningShoe color='white'/>} color='green.500' amount={stats.speed} statName='Speed' />\n            <Stat icon={<CgGym color='white'/>} color='purple.500' amount={stats.strength} statName='Strength' />\n        </Box>\n    );\n}\n\nexport default StatList;","import { Image } from \"@chakra-ui/image\";\nimport React, { useState } from \"react\";\nimport { Hero } from \"../../../models\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Fade } from \"@chakra-ui/react\";\nimport HeroName from \"./HeroName\";\nimport CloseIcn from \"./CloseIcn\";\nimport StatList from \"./Stats/StatList\";\n\ninterface Props {\n  hero: Hero;\n  onClose: any;\n}\n\nconst HeroBanner: React.FC<Props> = ({ hero, onClose }) => {\n  const [showCloseBtn, setShowCloseBtn] = useState(false);\n\n  const displayCloseBtn = () => {\n    setShowCloseBtn(true);\n  };\n  const hideCloseBtn = () => {\n    setShowCloseBtn(false);\n  }\n  \n\n  return (\n    <Box\n      position=\"relative\"\n      borderRadius=\"8px\"\n      overflow=\"hidden\"\n      height='55vh'\n      maxW='80%'\n      minW='10rem'\n      onMouseEnter={displayCloseBtn}\n      onMouseLeave={hideCloseBtn}\n    >\n      <HeroName>{hero.name}</HeroName>\n      <Image\n        src={hero.image.url}\n        objectFit=\"cover\"\n        objectPosition=\"center\"\n        height=\"100%\"\n      />\n      <StatList stats={hero.powerstats} />\n      <Fade in={showCloseBtn}>\n        <CloseIcn onClick={onClose}/>\n      </Fade>\n    </Box>\n  );\n};\n\nexport default HeroBanner;\n","import { IconButton } from \"@chakra-ui/button\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport React, { MouseEventHandler } from \"react\";\nimport { AiFillDelete, AiFillPrinter } from \"react-icons/ai\";\n\ninterface Props {\n  onDelete: MouseEventHandler<HTMLButtonElement>;\n  onPrint: any;\n}\n\nconst SideButtons: React.FC<Props> = ({onDelete, onPrint}) => {\n  return (\n    <Flex direction=\"column\" position=\"fixed\" left=\"0\" top=\"30%\" zIndex='1'>\n      <Tooltip label='Print team / Save to PDF' placement='right'>\n      <IconButton\n        aria-label=\"print\"\n        size=\"lg\"\n        icon={<AiFillPrinter />}\n        borderRadius=\"0\"\n        borderTopEndRadius=\"8px\"\n        onClick={onPrint}\n      />\n      </Tooltip>\n      <Tooltip label='Clear Team' placement='right'>\n      <IconButton\n        aria-label=\"clear team\"\n        size=\"lg\"\n        colorScheme=\"red\"\n        icon={<AiFillDelete />}\n        borderRadius=\"0\"\n        borderBottomEndRadius=\"8px\"\n        onClick={onDelete}\n      />\n      </Tooltip>\n    </Flex>\n  );\n};\n\nexport default SideButtons;\n","import React from \"react\";\nimport { RiSwordFill } from \"react-icons/ri\";\nimport { Text } from \"@chakra-ui/layout\";\nimport { BsFillShieldFill } from \"react-icons/bs\";\nimport { GiBrain, GiRunningShoe } from \"react-icons/gi\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport { CgGym } from \"react-icons/cg\";\nimport { Flex } from \"@chakra-ui/react\";\n\ninterface Props {\n  highestStat:\n    | \"combat\"\n    | \"durability\"\n    | \"intelligence\"\n    | \"power\"\n    | \"speed\"\n    | \"strength\"\n    | \"\";\n}\n\nconst TeamDescription: React.FC<Props> = ({ highestStat }) => {\n  let text;\n  let icon;\n  if (highestStat === \"combat\") {\n    icon = <RiSwordFill size='2.5em' />;\n    text = \"Combat oriented Team\";\n  } else if (highestStat === \"durability\") {\n    icon = <BsFillShieldFill size='2.5em' />;\n    text = <Text>Defensive Team</Text>;\n  } else if (highestStat === \"intelligence\") {\n    icon = <GiBrain size='2.5em' />;\n    text = \"Smart Team\";\n  } else if (highestStat === \"power\") {\n    icon = <AiFillThunderbolt size='2.5em' />;\n    text = \"Powerful Team\";\n  } else if (highestStat === \"speed\") {\n    icon = <GiRunningShoe size='2.5em' />;\n    text = \"Fast Team\";\n  } else if (highestStat === \"strength\") {\n    icon = <CgGym size='2.5em' />;\n    text = \"Strong Team\";\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" backgroundColor=\"gray.200\" borderWidth='1px' borderColor='gray.300' borderRadius='12px' p={1}>\n      {icon}\n      <Text ml={2} fontSize=\"3xl\" fontWeight=\"bold\">\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default TeamDescription;\n","import { Box, Grid, GridItem, Text } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { Hero } from \"../../models\";\nimport TeamDescription from \"./TeamDescription\";\n\ninterface Props {\n  //   stats: Record<keyof Powerstats, number>;\n  team: (Hero | null)[];\n}\n\n\n\nconst LBS_TO_KG = 0.453592;\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toLocaleUpperCase() + str.slice(1);\n};\n\nconst StatGrid: React.FC<Props> = ({ team }) => {\n  const stats = team.reduce(\n    (value, hero) => {\n      if (hero) {\n        value.combat += +hero.powerstats.combat;\n        value.durability += +hero.powerstats.durability;\n        value.intelligence += +hero.powerstats.intelligence;\n        value.power += +hero.powerstats.power;\n        value.speed += +hero.powerstats.speed;\n        value.strength += +hero.powerstats.strength;\n      }\n      return value;\n    },\n    //prettier-ignore\n    {combat: 0, durability: 0,intelligence: 0,power: 0,speed: 0,strength: 0}\n  );\n\n  //this api sucks\n  const { height, weight, weightedHeroAmount } = team.reduce(\n    (value, hero) => {\n      if (hero) {\n        let weight = parseInt(hero.appearance.weight![0].split(\" \")[0]);\n        console.log(\"weight\", weight);\n        if (weight) {\n          weight = weight * LBS_TO_KG;\n          if (hero.appearance.height?.length === 2) {\n            //there is a hero whose height is: [\"Shaker Heights, Ohio\"]\n            let [height, unit]: any = hero.appearance.height![1].split(\" \");\n            console.log(\"height, unit\", height, unit);\n            height = parseFloat(height);\n            console.log(\"parsedheight\", height);\n            if (height && (unit === \"cm\" || unit === \"meters\")) {\n              height = unit === \"meters\" ? height * 100 : height;\n              value.height += height;\n              value.weight += weight;\n              value.weightedHeroAmount++;\n            }\n          }\n        }\n      }\n      return value;\n    },\n    { height: 0, weight: 0, weightedHeroAmount: 0 }\n  );\n\n  let maxStat: number = Math.max(...Object.values(stats));\n  let bestStat: any;\n  for (let key in stats) {\n    if ((stats as any)[key] === maxStat) {\n      bestStat = key;\n      break;\n    }\n  }\n\n  return (\n    <>\n      {maxStat > 0 && (\n        <>\n          <Grid mt={4} gridTemplateColumns={['max-content', 'max-content max-content', 'repeat(auto-fit, minmax(23%, max-content))']} gap='1rem' justifyContent='center'>\n            <GridItem gridRow={1} gridColumn='1 / -1'>\n              <TeamDescription highestStat={bestStat} />\n            </GridItem>\n            {(Object.keys(stats) as Array<keyof typeof stats>).map((key) => {\n              return (\n                <GridItem key={key}>\n                  <Text fontSize=\"2xl\" fontWeight=\"bold\">\n                    {capitalize(key)}\n                  </Text>\n                  <Text fontSize=\"2xl\">{stats[key]}</Text>\n                </GridItem>\n              );\n            })}\n            <Box>\n              <Text fontSize=\"2xl\" fontWeight=\"bold\">\n                Avg. Height\n              </Text>\n              <Text fontSize=\"2xl\">\n                {weightedHeroAmount\n                  ? Math.round(height / weightedHeroAmount)\n                  : 0}{\" \"}\n                cm\n              </Text>\n            </Box>\n            <Box>\n              <Text fontSize=\"2xl\" fontWeight=\"bold\">\n                Avg. Weight\n              </Text>\n              <Text fontSize=\"2xl\">\n                {weightedHeroAmount\n                  ? Math.round(weight / weightedHeroAmount)\n                  : 0}{\" \"}\n                kgs\n              </Text>\n            </Box>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StatGrid;\n","import { Flex, Grid } from '@chakra-ui/layout';\nimport React from 'react';\n\ninterface Props {}\n\nconst TeamContainer: React.FC<Props> = ({children}) => {\n\n    return (\n    <Grid\n    templateColumns={['15rem', 'repeat(2,1fr)', 'repeat(3,1fr)','repeat(6,1fr)']}\n    margin='auto'\n    gap='1.5rem'\n    justifyContent='center'\n    justifyItems='center'\n    mt={4}\n    >\n        {children}\n    </Grid>\n        \n    );\n}\n\nexport default TeamContainer;","import { Box, Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport { TeamContext } from \"../../Context/TeamContext/TeamContext\";\nimport EmptyHeroBanner from \"./EmptyHeroBanner\";\nimport HeroBanner from \"./HeroBanner/HeroBanner\";\nimport SideButtons from \"./SideButtons\";\nimport StatGrid from \"./StatGrid\";\nimport TeamContainer from \"./TeamContainer\";\n\ninterface Props {}\n\nconst HeroTeam: React.FC<Props> = (props) => {\n  const teamCtx = React.useContext(TeamContext);\n  const appCtx = React.useContext(AppContext);\n  const componentRef = React.useRef<HTMLDivElement>(null);\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const team = teamCtx!.heroes.flat();\n\n  const heroes = team.map((h) =>\n    h === null ? (\n      <EmptyHeroBanner key={Math.random()} onClick={appCtx?.toggleDrawer} />\n    ) : (\n      <HeroBanner\n        key={h.id}\n        hero={h}\n        onClose={() => teamCtx!.dispatch({ type: \"REMOVE\", hero: h })}\n      />\n    )\n  );\n  return (\n    <>\n      <Box ref={componentRef} p={2}>\n        <TeamContainer>{heroes}</TeamContainer>\n        <StatGrid team={team} />\n      </Box>\n      <Button\n        variant=\"link\"\n        size=\"lg\"\n        fontSize=\"2xl\"\n        display=\"block\"\n        m=\"auto\"\n        mt={2}\n        onClick={appCtx?.toggleDrawer}\n      >\n        Add heroes to your team\n      </Button>\n      <SideButtons\n        onDelete={() => teamCtx?.dispatch({ type: \"CLEAR\" })}\n        onPrint={handlePrint}\n      />\n    </>\n  );\n};\n\nexport default HeroTeam;\n","import axios from \"axios\";\nimport { HeroListResponse } from \"./models\";\n\nexport const fetchHero = async (name: string) => {\n  const response = axios.get<HeroListResponse>(\n    `${process.env.REACT_APP_API_URL}/search/${name}`\n  );\n  return response;\n};\n","import styles from './spinner.module.css'\n\nconst Spinner = (props) => {\n  return (\n    <div className={styles.spinner}>\n      <div className={styles.bounce1}></div>\n      <div className={styles.bounce2}></div>\n      <div className={styles.bounce3}></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { MouseEventHandler } from \"react\";\nimport { Box } from \"@chakra-ui/layout\";\n\ninterface Props {\n  onClick: MouseEventHandler;\n}\n\nexport const Backdrop: React.FC<Props> = ({ onClick, children }) => {\n  return (\n    <Box\n      pos=\"fixed\"\n      top={0}\n      left={0}\n      width=\"100%\"\n      height=\"100vh\"\n      zIndex={10}\n      backgroundColor=\"rgba(0, 0, 0, 0.75);\"\n      onClick={onClick}\n    >\n      {children}\n    </Box>\n  );\n};\n","import { Image } from \"@chakra-ui/image\";\nimport React from \"react\";\n\ninterface Props {\n  src: string;\n  alt?: string;\n}\n\nconst ImageOverlay: React.FC<Props> = ({ src, alt }) => {\n  return (\n    <Image\n      zIndex={15}\n      maxH='70vh'\n      position=\"fixed\"\n      top=\"50%\"\n      left=\"50%\"\n      transform=\"translate(-50%, -50%)\"\n      src={src}\n      alt={alt}\n    ></Image>\n  );\n};\n\nexport default ImageOverlay;\n","import { Tag, TagLabel, TagLeftIcon, Tooltip } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n    statName: string;\n    value: string;\n    icon: any;\n}\n\nconst StatTag: React.FC<Props> = ({value, statName, icon }) => {\n\n    return (\n        <Tooltip hasArrow label={statName}>\n                <Tag variant='outline' size='lg' width='4.8rem' px={2} ml={2} mt={2} justifyContent='center'>\n                  <TagLeftIcon as={icon}/>\n                  <TagLabel fontWeight='bold'>{value}</TagLabel>\n                </Tag>\n            </Tooltip>\n    );\n}\n\nexport default StatTag;","import { Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport { Powerstats } from '../../models';\nimport StatTag from './StatTag';\nimport { RiSwordFill } from \"react-icons/ri\";\nimport { BsFillShieldFill } from 'react-icons/bs';\nimport { GiBrain, GiRunningShoe } from 'react-icons/gi';\nimport { AiFillThunderbolt } from 'react-icons/ai';\nimport { CgGym } from 'react-icons/cg';\n\ninterface Props {stats: Powerstats}\n\nconst StatPanel: React.FC<Props> = ({stats}) => {\n    const {combat, durability, intelligence, power, speed, strength} = stats;\n\n    return (\n        <Flex spacing={2} wrap='wrap'>\n            <StatTag statName='Combat' value={combat} icon={RiSwordFill} />\n            <StatTag statName='Durability' value={durability} icon={BsFillShieldFill} />\n            <StatTag statName='Intelligence' value={intelligence} icon={GiBrain} />\n            <StatTag statName='Power' value={power} icon={AiFillThunderbolt} />\n            <StatTag statName='Speed' value={speed} icon={GiRunningShoe} />\n            <StatTag statName='Strength' value={strength} icon={CgGym} />\n        </Flex>\n    );\n}\n\nexport default StatPanel;","import { AddIcon } from '@chakra-ui/icons';\nimport { IconButton } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {\n    onClick: any\n}\n\nconst CardButton: React.FC<Props> = ({onClick}) => {\n\n    return (\n        <IconButton\n        onClick={onClick}\n        position=\"absolute\"\n        bottom=\"1rem\"\n        right=\"1rem\"\n        aria-label=\"Add to team\"\n        icon={<AddIcon />}\n        size=\"sm\"\n        backgroundColor=\"transparent\"\n        borderRadius=\"50%\"\n        // border=\"1px solid black\"\n        _hover={{\n          backgroundColor: \"green.100\",\n        }}\n      >\n        Add\n      </IconButton>\n    );\n}\n\nexport default CardButton;","import { Badge } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface Props {bad?: boolean}\n\nconst CardBadge: React.FC<Props> = ({bad}) => {\n\n    return (\n        <Badge\n        colorScheme={bad ? \"red\" : \"green\"}\n        position=\"absolute\"\n        top=\"1rem\"\n        right=\"1rem\"\n      >\n        {bad ? 'bad' : 'good'}\n      </Badge>\n    );\n}\n\nexport default CardBadge;","import { Flex, Heading, Image } from \"@chakra-ui/react\";\nimport React, { useContext, useState } from \"react\";\nimport { Hero } from \"../../../models\";\nimport { Backdrop } from \"../../Backdrop/Backdrop\";\nimport ImageOverlay from \"../../Backdrop/ImageOverlay\";\nimport StatPanel from \"../../StatPanel/StatPanel\";\nimport { TeamContext } from \"../../../Context/TeamContext/TeamContext\";\nimport CardButton from \"./CardButton\";\nimport CardBadge from \"./CardBadge\";\n\ninterface Props {\n  hero: Hero;\n}\n\nconst HeroCard: React.FC<Props> = ({ hero }) => {\n  const [isPictureOpen, setIsPictureOpen] = useState(false);\n  const teamCtx = useContext(TeamContext);\n\n  const addToTeam = () => {\n    teamCtx?.dispatch({ type: \"ADD\", hero });\n  };\n\n  return (\n    <>\n      <Flex\n        border=\"1px\"\n        borderColor=\"gray.200\"\n        p={2}\n        width=\"100%\"\n        position=\"relative\"\n      >\n        <Image\n          src={hero.image.url}\n          boxSize=\"7rem\"\n          objectFit=\"cover\"\n          objectPosition=\"center\"\n          cursor=\"pointer\"\n          onClick={() => {\n            setIsPictureOpen(true);\n          }}\n        />\n        <Flex px={4} direction=\"column\" justifyContent=\"space-between\" w='80%'>\n          <Heading fontSize=\"1.7rem\">{hero.name}</Heading>\n          <StatPanel stats={hero.powerstats} />\n        </Flex>\n       <CardButton onClick={addToTeam} />\n       <CardBadge bad={hero.biography.alignment === 'bad'}/>\n      </Flex>\n      {isPictureOpen && (\n        <Backdrop\n          onClick={() => { setIsPictureOpen(false); }}>\n          <ImageOverlay src={hero.image.url} alt={hero.name} />\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nexport default HeroCard;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, IconButton, VStack } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Hero } from \"../../models\";\nimport HeroCard from \"./HeroCard/HeroCard\";\n\ninterface Props {\n  heroes: Hero[];\n}\n\nconst HeroList: React.FC<Props> = ({ heroes }) => {\n  const [page, setPage] = useState(0);\n  const pageSize = 4;\n\n  //resets page when list changes\n  useEffect(() => {\n    setPage(0);\n  }, [heroes]);\n\n  const heroesPage = heroes.slice(page * pageSize, page * pageSize + pageSize);\n\n  const hasNextPage = heroes.length > (page + 1) * pageSize;\n  const hasPrevPage = page > 0;\n\n  const pageUp = () => {\n    setPage(page + 1);\n  };\n  const pageDown = () => {\n    setPage(page - 1);\n  };\n\n  return (\n    <VStack spacing={2} margin=\"auto\">\n      {heroesPage.map((hero) => (\n        <HeroCard key={hero.id} hero={hero} />\n      ))}\n      {heroes.length > pageSize && (\n        <Box>\n          <IconButton\n            onClick={pageDown}\n            disabled={!hasPrevPage}\n            aria-label=\"page back\"\n            icon={<ChevronLeftIcon />}\n            mr={2}\n          />\n          <IconButton\n            onClick={pageUp}\n            disabled={!hasNextPage}\n            aria-label=\"page up\"\n            icon={<ChevronRightIcon />}\n          />\n        </Box>\n      )}\n    </VStack>\n  );\n};\n\nexport default HeroList;\n","import { SearchIcon } from \"@chakra-ui/icons\";\nimport { Input, InputGroup, InputLeftElement } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchHero } from \"../../api\";\nimport { Hero } from \"../../models\";\nimport Spinner from \"../spinner/Spinner\";\nimport HeroList from \"./HeroList\";\n\nconst SearchArea = React.forwardRef<HTMLDivElement>((props, ref) => {\n  const [searchResults, setSearchResults] = useState<Hero[]>([]);\n  const [input, setInput] = useState(\"\");\n  // prettier-ignore\n  const { data, refetch, status } = useQuery([\"hero\", input],() => fetchHero(input),{\n      enabled: false,\n    }\n  );\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    const timer = setTimeout(refetch, 600);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [input, refetch]);\n\n  useEffect(() => {\n    if (data?.data.response === \"success\") {\n      setSearchResults(\n        data.data.results!.filter(\n          (h) =>\n            (h.biography.alignment === \"good\" ||\n              h.biography.alignment === \"bad\") &&\n            Object.values(h.powerstats).every((stat) => stat !== \"null\")\n        )\n      );\n    }\n  }, [data]);\n\n  let body;\n  if (status === \"error\") {\n    body = <Text size=\"3xl\">Something went wrong</Text>;\n  } else if (input) {\n    if (status === \"loading\") {\n      body = <Spinner />;\n    } else if (data?.data.response === \"error\" && searchResults.length === 0) {\n      //query found no results\n      body = (\n        <Text fontSize=\"3xl\" textAlign=\"center\" mt={8} p={2}>\n          Oops! Looks like there are no heroes with that name\n        </Text>\n      );\n    } else if (data?.data.response === \"success\") {\n      body = <HeroList heroes={searchResults} />;\n    }\n  }\n\n  return (\n    <Box>\n      <Box mb={4}>\n        <InputGroup>\n        <InputLeftElement>\n        <SearchIcon color='gray.500' fontSize='1.4em' alignSelf='flex-end' mb={1}/>\n        </InputLeftElement>\n        <Input\n          placeholder=\"Search Hero...\"\n          size=\"lg\"\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        </InputGroup>\n      </Box>\n      {body}\n    </Box>\n  );\n});\n\nexport default SearchArea;\n","import { Drawer, DrawerBody, DrawerCloseButton, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay } from '@chakra-ui/react';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../Context/AppContext';\nimport SearchArea from './SearchArea';\n\ninterface Props {}\n\nconst SearchDrawer: React.FC<Props> = (props) => {\n    const appCtx = useContext(AppContext);\n    if(!appCtx){\n        return null;\n    }\n    \n    return (\n        <Drawer\n        isOpen={appCtx.isDrawerOpen}\n        placement=\"right\"\n        size='xl'\n        onClose={appCtx.toggleDrawer}\n      >\n        <DrawerOverlay />\n        <DrawerContent m='0'>\n          <DrawerCloseButton />\n          <DrawerHeader>Add Heroes to your team</DrawerHeader>\n\n          <DrawerBody>\n            <SearchArea />\n          </DrawerBody>\n\n          <DrawerFooter>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    );\n}\n\nexport default SearchDrawer;","import { Box } from \"@chakra-ui/layout\";\nimport Header from \"./components/Header\";\nimport HeroTeam from \"./components/HeroTeam/HeroTeam\";\nimport { TeamContextProvider } from \"./Context/TeamContext/TeamContext\";\nimport { AppContextProvider } from \"./Context/AppContext\";\nimport SearchDrawer from \"./components/HeroSearch/Drawer\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <TeamContextProvider>\n        <SearchDrawer/>\n        <Header />\n        <Box maxW=\"80%\" m=\"auto\">\n            <HeroTeam />\n        </Box>\n      </TeamContextProvider>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity,\n      cacheTime: 1000 * 60 * 60 * 2\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__3Zx0u\",\"sk-bouncedelay\":\"spinner_sk-bouncedelay__1G2Bz\",\"bounce1\":\"spinner_bounce1__1TOHt\",\"bounce2\":\"spinner_bounce2__dpbHA\"};"],"sourceRoot":""}